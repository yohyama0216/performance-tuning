セット商品を扱うECサイトのデータベース設計を行う場合、以下のように商品テーブルの構成を行うと効果的です。

## 1. **商品テーブル (`products`)**

- `product_id`: 商品の一意のID。
- `product_name`: 商品名。
- `description`: 商品の説明。
- `price`: 商品の単価。セット商品の場合、セット全体の価格。
- `is_set`: セット商品かどうかを示すフラグ（例: 1 = セット商品, 0 = 単独商品）。
- その他、画像URLやカテゴリIDなどのカラム。

## 2. **セット商品テーブル (`product_sets`)**

このテーブルはセット商品を構成する各商品の情報を持つ。

- `set_id`: セット商品のID（`products`テーブルの`product_id`とリンク）。
- `product_id`: セットに含まれる各商品のID。
- `quantity`: その商品のセット内での数量。

## 3. **サンプルのクエリ**

セット商品とそれに関連する商品を取得する場合のクエリ例：

```sql
SELECT p.product_name AS set_name, ps.product_id, p2.product_name, ps.quantity
FROM products p
JOIN product_sets ps ON p.product_id = ps.set_id
JOIN products p2 ON ps.product_id = p2.product_id
WHERE p.is_set = 1 AND p.product_id = [セット商品のID];
```

## 4. **注意点**

- この設計では、セット商品も単独の商品も`products`テーブルに格納されます。セット商品であるかどうかは`is_set`フラグで識別します。
- `product_sets`テーブルは、セット商品の構成を定義するためのものです。セット商品のIDと、そのセットに含まれる各商品のIDを関連付けることで、どの商品がどのセットに含まれているかを特定できます。
- セット商品の価格は、`products`テーブルの`price`カラムに格納されると仮定しています。この価格は、セット内の各商品の価格の合計とは限りません。セット価格は通常、単独で各商品を購入するよりも割安に設定されることが多いためです。

このような設計は、セット商品と単独商品を柔軟に扱い、さまざまな商品構成やプロモーションを実装するのに適しています。
